{"version":3,"sources":["components/Navbar/index.jsx","components/Modal/comfirmation.jsx","baseUrl.js","components/Modal/edit-user.jsx","components/Layout/users.jsx","components/Modal/create-user.jsx","components/View/index.jsx","components/Modal/edit-task.jsx","components/Layout/tasks.jsx","components/Modal/create-task.jsx","components/View/tasks.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","useState","Navbar","color","light","expand","NavbarBrand","href","Comfirm","message","action","setComfirm","comfirm","toggle","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","Button","onClick","baseUrl","EditUser","username","setUsername","setModal","modal","name","userId","getUsers","InputGroup","Input","value","onChange","e","target","placeholder","a","async","preventDefault","axios","method","url","headers","data","console","log","response","Users","history","useHistory","setName","setUserId","users","editModal","id","deletePropmt","className","Table","responsive","striped","map","key","scope","push","size","CreateUser","setCreate","create","Index","setUsers","useEffect","get","allUsers","Container","Row","Col","md","EditTask","description","setDescription","state","setState","taskId","getUserTasks","FormGroup","Label","for","type","selected","disabled","Tasks","setTaskId","tasks","newValue","split","CreateTask","Task","params","useParams","setTasks","task","setTask","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3be0c9f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText\r\n} from 'reactstrap';\r\n\r\nconst NavBar = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">TODO APP</NavbarBrand>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst Comfirm = (props) => {\r\n  const {\r\n    message,\r\n    action,\r\n    setComfirm,\r\n    comfirm,\r\n  } = props;\r\n\r\n  const toggle = () => setComfirm(!comfirm);\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={comfirm} toggle={toggle} >\r\n        <ModalHeader toggle={toggle}>Comfirm</ModalHeader>\r\n        <ModalBody>\r\n          {message}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={action}>Yes</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>No</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comfirm;","const baseUrl = 'http://bunny-be.herokuapp.com/api/v1';\r\nexport default baseUrl;","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  InputGroup,\r\n  Input\r\n} from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport baseUrl from \"../../baseUrl\"\r\n\r\nconst EditUser = (props) => {\r\n  const [username, setUsername] = useState('');\r\n  const {\r\n    setModal,\r\n    modal,\r\n    name,\r\n    userId,\r\n    getUsers,\r\n  } = props;\r\n\r\n  const updateUser = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios({\r\n        method: 'put',\r\n        url: `${baseUrl}/update-user/${userId}`,\r\n        headers: {\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n        data: {\r\n          name: username || name,\r\n        },\r\n      });\r\n\r\n      // update users table\r\n      getUsers();\r\n      setModal(false);\r\n    } catch (err) {\r\n      console.log(err.response);\r\n    }\r\n  }\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle} >\r\n        <ModalHeader toggle={toggle}>Edit User</ModalHeader>\r\n        <ModalBody>\r\n          <InputGroup>\r\n            <Input\r\n              value={username || name}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              placeholder=\"username\" />\r\n          </InputGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={updateUser}>Submit</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditUser;\r\n","import React, { useState } from \"react\";\nimport { Table, Button } from 'reactstrap';\nimport axios from \"axios\";\n\nimport {\n  useHistory\n} from \"react-router-dom\";\n\nimport Comfirm from \"../Modal/comfirmation.jsx\";\nimport EditUser from \"../Modal/edit-user.jsx\";\nimport baseUrl from \"../../baseUrl\";\n\nconst Users = (props) => {\n  const history = useHistory();\n  const [comfirm, setComfirm] = useState(false);\n  const [modal, setModal] = useState(false);\n\n  const [name, setName] = useState('');\n  const [userId, setUserId] = useState(0);\n  // const [spinner, setSpinner] = useState(false);\n\n  const { users, getUsers } = props;\n\n\n  const editModal = (e) => {\n    // activate edit user modal\n    setModal(true);\n    setName(e.target.name);\n    setUserId(e.target.id);\n  };\n\n  const deletePropmt = (e) => {\n    // activate delete propmpt\n    setComfirm(true);\n    setUserId(e.target.id);\n    console.log(comfirm)\n  }\n\n  const deleteUser = async (e) => {\n    e.preventDefault();\n    try {\n      await axios({\n        method: 'delete',\n        url: `${baseUrl}/delete-user/${userId}`,\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n        },\n      });\n\n      // update users table\n      getUsers();\n      setComfirm(false);\n    } catch (err) {\n      console.log(err.response);\n    }\n  }\n\n  const listUsers = () => {\n    const data = users || [];\n\n    return data.map((value, key) => {\n      return (\n\n        <tr\n          key={value.id}>\n          <th scope=\"row\">{key + 1}</th>\n          <td>{value.name}</td>\n          <td>\n            <Button\n              onClick={() => history.push(`tasks/${value.id}`)}\n              size=\"sm\"\n              id={value.id}\n              color=\"success\">\n              View User\n                </Button>{' '}\n          </td>\n          <td>\n            <Button\n              onClick={editModal}\n              name={value.name}\n              id={value.id}\n              size=\"sm\"\n              color=\"primary\">\n              Update\n                </Button>{' '}\n          </td>\n          <td>\n            <Button\n              onClick={deletePropmt}\n              size=\"sm\"\n              id={value.id}\n              color=\"danger\">\n              Delete\n                </Button>{' '}\n          </td>\n        </tr>\n\n      );\n    });\n  }\n\n\n  return (\n    <div className=\"users\">\n      <Comfirm\n        comfirm={comfirm}\n        setComfirm={setComfirm}\n        message=\"Are You Sure You Want To Delete This User\"\n        action={deleteUser}\n      />\n\n      <EditUser\n        modal={modal}\n        setModal={setModal}\n        name={name}\n        userId={userId}\n        getUsers={getUsers}\n      />\n\n      <Table className=\"users\" responsive striped>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <td>View</td>\n            <th>Update</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {listUsers()}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\nexport default Users;\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  InputGroup,\r\n  Input\r\n} from 'reactstrap';\r\n\r\nconst CreateUser = (props) => {\r\n  const {\r\n    action,\r\n    setCreate,\r\n    create,\r\n    setName,\r\n  } = props;\r\n\r\n  const toggle = () => setCreate(!create);\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={create} toggle={toggle} >\r\n        <ModalHeader toggle={toggle}>Create User</ModalHeader>\r\n        <ModalBody>\r\n          <InputGroup>\r\n            <Input onChange={(e) => setName(e.target.value)} placeholder=\"username\" />\r\n          </InputGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={action}>Submit</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateUser;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Col, Row, Button } from \"reactstrap\";\nimport axios from \"axios\";\nimport NavBar from \"../Navbar/index\";\nimport Users from \"../Layout/users.jsx\";\n\nimport CreateUser from \"../Modal/create-user.jsx\"\nimport baseUrl from \"../../baseUrl\";\n\nconst Index = () => {\n  const [create, setCreate] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(`${baseUrl}/users`);\n      setUsers(response.data.data.allUsers);\n      console.log(response)\n    } catch (err) {\n\n    }\n  }\n\n  const createUser = async (e) => {\n    e.preventDefault();\n    try {\n      await axios({\n        method: 'post',\n        url: `${baseUrl}/create-user`,\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n        },\n        data: {\n          name,\n        }\n      });\n\n      // update users table\n      getUsers();\n      setCreate(false);\n    } catch (err) {\n      console.log(err.response);\n    }\n  }\n\n  const createModal = () => {\n    setCreate(true);\n  }\n\n  return (\n    <>\n      <NavBar />\n\n      <CreateUser\n        create={create}\n        setCreate={setCreate}\n        action={createUser}\n        setName={setName}\n      />\n      <Container>\n        <Row className=\"create\">\n          <Col md=\"4\">\n            <Button onClick={createModal} color=\"info\">Create User</Button>{' '}\n          </Col>\n        </Row>\n        <Row >\n          <Col md=\"12\">\n            <Users users={users} getUsers={getUsers} />\n          </Col>\n        </Row>\n      </Container>\n\n    </>\n  );\n};\n\nexport default Index;\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n} from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport baseUrl from \"../../baseUrl\";\r\n\r\nconst EditTask = (props) => {\r\n  const {\r\n    setModal,\r\n    modal,\r\n    description,\r\n    setDescription,\r\n    state,\r\n    setState,\r\n    taskId,\r\n    getUserTasks\r\n  } = props;\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const updateTask = async (e) => {\r\n    // e.preventDefault();\r\n    try {\r\n      await axios({\r\n        method: 'put',\r\n        url: `${baseUrl}/update-task/${taskId}`,\r\n        headers: {\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n        data: {\r\n          state,\r\n          description,\r\n        }\r\n      });\r\n\r\n      // update tasks table\r\n      getUserTasks();\r\n      setModal(false);\r\n    } catch (err) {\r\n      console.log(err.response);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle} >\r\n        <ModalHeader toggle={toggle}>Edit Task</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label\r\n              for=\"description\">\r\n              Description\r\n             </Label>\r\n            <Input\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)} placeholder=\"description\" />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"state\">State</Label>\r\n            <Input\r\n              onChange={(e) => setState(e.target.value)}\r\n              type=\"select\"\r\n              name=\"select\"\r\n              id=\"exampleSelect\"\r\n            >\r\n              <option selected disabled>State</option>\r\n              <option value=\"todo\">todo</option>\r\n              <option value=\"done\">done</option>\r\n            </Input>\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={updateTask}>Submit</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditTask;\r\n","import React, { useState } from \"react\";\r\nimport { Table, Button } from 'reactstrap';\r\nimport axios from \"axios\";\r\n\r\nimport baseUrl from \"../../baseUrl\";\r\n\r\nimport Comfirm from \"../Modal/comfirmation.jsx\";\r\nimport EditTask from \"../Modal/edit-task.jsx\";\r\n\r\nconst Tasks = (props) => {\r\n  const [comfirm, setComfirm] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [taskId, setTaskId] = useState(0);\r\n  const [description, setDescription] = useState('')\r\n  const [state, setState] = useState('');\r\n\r\n  const { tasks, getUserTasks } = props;\r\n\r\n\r\n  const editModal = (e) => {\r\n    const { id, value } = e.target;\r\n    const newValue = value.split(',')\r\n    // activate edit user modal\r\n    setModal(true);\r\n    console.log(e.target.value)\r\n\r\n    setTaskId(id);\r\n    setDescription(newValue[0]);\r\n    setState(newValue[1]);\r\n  };\r\n\r\n  const deleteTask = async (e) => {\r\n    // e.preventDefault();\r\n    try {\r\n      await axios({\r\n        method: 'delete',\r\n        url: `${baseUrl}/delete-task/${taskId}`,\r\n        headers: {\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n      });\r\n\r\n      // update tasks table\r\n      getUserTasks();\r\n      setComfirm(false);\r\n    } catch (err) {\r\n      console.log(err.response);\r\n    }\r\n  }\r\n\r\n  const deletePropmt = (e) => {\r\n    // activate delete propmpt\r\n    setComfirm(true);\r\n\r\n    setTaskId(e.target.id);\r\n  }\r\n\r\n  const listTasks = () => {\r\n    const data = tasks || [];\r\n\r\n    return data.map((value, key) => {\r\n      return (\r\n        <tr key={value.id}>\r\n          <th scope=\"row\">{key + 1}</th>\r\n          <td>{value.description}</td>\r\n          <td>{value.state}</td>\r\n          <td>\r\n            <Button\r\n              onClick={editModal}\r\n              size=\"sm\"\r\n              id={value.id}\r\n              value={[value.description, value.state]}\r\n              color=\"primary\">\r\n              Update\r\n                </Button>{' '}\r\n          </td>\r\n          <td>\r\n            <Button\r\n              onClick={deletePropmt}\r\n              size=\"sm\"\r\n              id={value.id}\r\n              color=\"danger\">\r\n              Delete\r\n                </Button>{' '}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"users\">\r\n      <Comfirm\r\n        action={deleteTask}\r\n        comfirm={comfirm}\r\n        setComfirm={setComfirm}\r\n        message=\"Are You Sure You Want To Delete This Task\"\r\n      />\r\n\r\n      <EditTask\r\n        getUserTasks={getUserTasks}\r\n        modal={modal}\r\n        setModal={setModal}\r\n        taskId={taskId}\r\n        setTaskId={setTaskId}\r\n        description={description}\r\n        setDescription={setDescription}\r\n        state={state}\r\n        setState={setState}\r\n      />\r\n\r\n      <Table className=\"users\" responsive striped>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Description</th>\r\n            <th>State</th>\r\n            <th>Update</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {listTasks()}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\nexport default Tasks;\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n} from 'reactstrap';\r\n\r\nconst CreateTask = (props) => {\r\n  const {\r\n    action,\r\n    setCreate,\r\n    create,\r\n    setState,\r\n    setDescription,\r\n  } = props;\r\n\r\n  const toggle = () => setCreate(!create);\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={create} toggle={toggle} >\r\n        <ModalHeader toggle={toggle}>Create New Task</ModalHeader>\r\n        <ModalBody>\r\n\r\n          <FormGroup>\r\n            <Label for=\"description\">Description</Label>\r\n            <Input onChange={(e) => setDescription(e.target.value)} placeholder=\"description\" />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"state\">State</Label>\r\n            <Input\r\n              onChange={(e) => setState(e.target.value)}\r\n              type=\"select\"\r\n              name=\"select\"\r\n              id=\"exampleSelect\"\r\n            >\r\n              <option selected disabled>State</option>\r\n              <option value=\"todo\">todo</option>\r\n              <option value=\"done\">done</option>\r\n            </Input>\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={action}>Submit</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTask;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Col, Row, Button } from \"reactstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport baseUrl from '../../baseUrl';\r\nimport NavBar from \"../Navbar/index\";\r\nimport Tasks from \"../Layout/tasks.jsx\";\r\n\r\nimport TaskModal from \"../Modal/create-task.jsx\";\r\n\r\nconst Task = () => {\r\n  const params = useParams();\r\n\r\n  const [create, setCreate] = useState(false);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [task, setTask] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const { userId } = params;\r\n\r\n  const createModal = () => {\r\n    setCreate(true);\r\n  }\r\n  useEffect(() => {\r\n    getUserTasks();\r\n  }, []);\r\n\r\n  const CreateTask = async (e) => {\r\n    // e.preventDefault();\r\n    try {\r\n      await axios({\r\n        method: 'post',\r\n        url: `${baseUrl}/create-task`,\r\n        headers: {\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n        data: {\r\n          userId,\r\n          task,\r\n          state,\r\n          description,\r\n        }\r\n      });\r\n\r\n      // update tasks table\r\n      getUserTasks();\r\n      setCreate(false);\r\n    } catch (err) {\r\n      console.log(err.response);\r\n    }\r\n  }\r\n\r\n  const getUserTasks = async () => {\r\n    try {\r\n      const response = await axios.get(`${baseUrl}/tasks/${userId}`);\r\n      setTasks(response.data.data.tasks);\r\n      console.log(response)\r\n    } catch (err) {\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n\r\n      <TaskModal\r\n        create={create}\r\n        setCreate={setCreate}\r\n        setState={setState}\r\n        setTask={setTask}\r\n        setDescription={setDescription}\r\n        action={CreateTask}\r\n      />\r\n      <Container>\r\n        <Row className=\"create\">\r\n          <Col md=\"4\">\r\n            <Button onClick={createModal} color=\"info\">Create New Task</Button>{' '}\r\n          </Col>\r\n        </Row>\r\n        <Row >\r\n          <Col md=\"12\">\r\n            <Tasks\r\n              getUserTasks={getUserTasks}\r\n              tasks={tasks} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, } from \"react-router-dom\";\nimport Index from \"./components/View/index\";\nimport Tasks from \"./components/View/tasks\";\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <Index />\n        </Route>\n\n        <Route exact path=\"/tasks/:userId\">\n          <Tasks />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}